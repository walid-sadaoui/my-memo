{"version":3,"sources":["components/organisms/Header/AuthenticatedHeader.tsx","components/AuthenticatedApp.tsx"],"names":["AuthenticatedHeader","logout","useAuth","useState","mobileNavOpen","setMobileNavOpen","HeaderMobileDetail","onClose","Button","icon","size","ButtonSize","MEDIUM","onClick","className","aria-label","Title","to","event","AppRoutes","exact","path","component","Notes","SignUp","AuthenticatedApp","role"],"mappings":"kNA8DeA,EAhD6C,WAAO,IACzDC,EAAWC,cAAXD,OADwD,EAEtBE,oBAAkB,GAFI,mBAEzDC,EAFyD,KAE1CC,EAF0C,KAIhE,OACE,oCACGD,GACC,kBAACE,EAAA,EAAD,CAAoBC,QAAS,kBAAYF,GAAiB,MAE5D,kBAAC,IAAD,KACE,kBAACG,EAAA,EAAD,CACEC,KAAK,OACLC,KAAMC,IAAWC,OACjBC,QAAS,kBAAYR,GAAiB,IACtCS,UAAU,gBACVC,aAAW,SAEb,kBAACC,EAAA,EAAD,CAAOH,QAAS,kBAAYR,GAAiB,MAC7C,kBAAC,IAAD,KACE,wBAAIS,UAAU,2DACZ,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CACEG,GAAG,SACHJ,QAAS,kBAAYR,GAAiB,IACtCS,UAAU,4CAHZ,WASJ,kBAACN,EAAA,EAAD,CACEC,KAAK,aACLC,KAAMC,IAAWC,OACjBC,QAAS,SAACK,GACRb,GAAiB,GACjBJ,MAGF,0BAAMa,UAAU,0CAAhB,uBCnCNK,EAA+B,WACnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWC,MACxC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWC,MAChC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,MACjC,kBAAC,IAAD,CAAOH,KAAK,UACV,kBAAC,IAAD,CAAUJ,GAAG,SAMNQ,UAxB6B,WAC1C,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,0BAAMC,KAAK,OAAOZ,UAAU,2CAC1B,kBAAC,EAAD","file":"static/js/5.eeb2ffee.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../AuthContext\";\r\nimport Button, { ButtonSize } from \"../../atoms/Button\";\r\nimport HeaderMobileDetail from \"./HeaderMobileDetail\";\r\nimport Title from \"../../atoms/Title\";\r\nimport { Header, NavBar } from \"./HeaderElements\";\r\n\r\ninterface HeaderProps {\r\n  categories?: string[];\r\n  links?: string[];\r\n  className?: string;\r\n}\r\n\r\nconst AuthenticatedHeader: FunctionComponent<HeaderProps> = () => {\r\n  const { logout } = useAuth();\r\n  const [mobileNavOpen, setMobileNavOpen] = useState<boolean>(false);\r\n\r\n  return (\r\n    <>\r\n      {mobileNavOpen && (\r\n        <HeaderMobileDetail onClose={(): void => setMobileNavOpen(false)} />\r\n      )}\r\n      <Header>\r\n        <Button\r\n          icon=\"menu\"\r\n          size={ButtonSize.MEDIUM}\r\n          onClick={(): void => setMobileNavOpen(true)}\r\n          className=\"m-4 sm:hidden\"\r\n          aria-label=\"Menu\"\r\n        />\r\n        <Title onClick={(): void => setMobileNavOpen(false)} />\r\n        <NavBar>\r\n          <ul className=\"hidden sm:flex sm:flex-row sm:mr-auto sm:ml-4 sm:w-auto\">\r\n            <li className=\"py-2\">\r\n              <Link\r\n                to=\"/notes\"\r\n                onClick={(): void => setMobileNavOpen(false)}\r\n                className=\"ml-2 mr-4 text-teal-200 hover:text-white\"\r\n              >\r\n                Notes\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <Button\r\n            icon=\"userCircle\"\r\n            size={ButtonSize.MEDIUM}\r\n            onClick={(event): void => {\r\n              setMobileNavOpen(false);\r\n              logout();\r\n            }}\r\n          >\r\n            <span className=\"sr-only sm:not-sr-only sm:ml-2 sm:flex\">\r\n              DÃ©connexion\r\n            </span>\r\n          </Button>\r\n        </NavBar>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthenticatedHeader;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport Notes from \"./pages/Notes\";\r\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport AuthenticatedHeader from \"./organisms/Header/AuthenticatedHeader\";\r\n\r\nconst AuthenticatedApp: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <AuthenticatedHeader />\r\n      <main role=\"main\" className=\"flex flex-grow overflow-hidden bg-white\">\r\n        <AppRoutes />\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst AppRoutes: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <Route exact={true} path=\"/\" component={Notes} />\r\n      <Route path=\"/notes\" component={Notes} />\r\n      <Route path=\"/signup\" component={SignUp} />\r\n      <Route path=\"/login\">\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AuthenticatedApp;\r\n"],"sourceRoot":""}