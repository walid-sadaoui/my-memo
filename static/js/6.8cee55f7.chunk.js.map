{"version":3,"sources":["components/organisms/Header/UnauthenticatedHeader.tsx","components/molecules/LabelInput.tsx","components/pages/SignUp.tsx","components/pages/LogIn.tsx","components/UnauthenticatedApp.tsx"],"names":["LoginLink","otherProps","to","process","className","Button","icon","size","ButtonSize","MEDIUM","UnauthenticatedHeader","useState","mobileNavOpen","setMobileNavOpen","HeaderMobileDetail","onClose","onClick","aria-label","Title","LabelInput","forwardRef","ref","label","type","id","name","maxLength","Fragment","htmlFor","Input","placeholder","SignUp","signUpSuccess","setSignUpSuccess","usernameInputRef","useRef","useForm","mode","register","handleSubmit","errors","watch","useEffect","current","focus","onSubmit","data","a","username","email","password","formData","postRequest","JSON","stringify","e","required","minLength","validate","value","confirmPassword","LogIn","login","useAuth","emailInputRef","AppRoutes","exact","path","component","Notes","UnauthenticatedApp","role"],"mappings":"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","file":"static/js/6.8cee55f7.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Button, { ButtonSize } from \"../../atoms/Button\";\nimport Title from \"../../atoms/Title\";\nimport { Header, NavBar } from \"./HeaderElements\";\nimport HeaderMobileDetail from \"./HeaderMobileDetail\";\n\ninterface HeaderProps {\n  logo?: string;\n  categories?: string[];\n  links?: string[];\n  className?: string;\n}\n\nconst LoginLink: React.FC<React.AnchorHTMLAttributes<HTMLAnchorElement>> = ({\n  ...otherProps\n}) => {\n  return (\n    <Link\n      to={process.env.PUBLIC_URL + \"/login\"}\n      className=\"flex items-end justify-end text-white rounded hover:text-teal-200\"\n      {...otherProps}\n    >\n      <Button icon=\"userCircle\" size={ButtonSize.MEDIUM}>\n        <span className=\"sr-only sm:not-sr-only sm:ml-2 sm:flex\">\n          Connexion\n        </span>\n      </Button>\n    </Link>\n  );\n};\n\nconst UnauthenticatedHeader: FunctionComponent<HeaderProps> = () => {\n  const [mobileNavOpen, setMobileNavOpen] = useState<boolean>(false);\n\n  return (\n    <>\n      {mobileNavOpen && (\n        <HeaderMobileDetail onClose={(): void => setMobileNavOpen(false)} />\n      )}\n      <Header>\n        <Button\n          icon=\"menu\"\n          size={ButtonSize.MEDIUM}\n          onClick={(): void => setMobileNavOpen(true)}\n          className=\"m-4 sm:hidden\"\n          aria-label=\"Menu\"\n        />\n        <Title onClick={(): void => setMobileNavOpen(false)} />\n        <NavBar>\n          <ul className=\"hidden sm:flex sm:flex-row sm:mr-auto sm:ml-4 sm:w-auto\">\n            <li className=\"py-2\">\n              <Link\n                to={process.env.PUBLIC_URL + \"/notes\"}\n                onClick={(): void => setMobileNavOpen(false)}\n                className=\"ml-2 mr-4 text-teal-200 hover:text-white\"\n              >\n                Notes\n              </Link>\n            </li>\n          </ul>\n          <LoginLink onClick={(): void => setMobileNavOpen(false)} />\n        </NavBar>\n      </Header>\n    </>\n  );\n};\n\nexport default UnauthenticatedHeader;\n","import React, { forwardRef } from \"react\";\nimport Input from \"../atoms/Input\";\n\ninterface LabelInputProps {\n  label: string;\n  type: string;\n  id: string;\n  name: string;\n  classname?: string;\n  required?: boolean;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLInputElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  value?: string;\n  maxLength?: number;\n}\n\nconst LabelInput = forwardRef<HTMLInputElement, LabelInputProps>(\n  ({ label, type, id, name, maxLength, ...otherProps }, ref) => {\n    return (\n      <React.Fragment>\n        <label htmlFor={id} className=\"pt-4 font-bold\">\n          {label}\n        </label>\n        <Input\n          id={id}\n          type={type}\n          placeholder={label}\n          name={name}\n          ref={ref}\n          maxLength={maxLength}\n          {...otherProps}\n        />\n      </React.Fragment>\n    );\n  }\n);\n\nexport default LabelInput;\n","import React, { FunctionComponent, useEffect, useRef, useState } from \"react\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport LabelInput from \"../molecules/LabelInput\";\nimport { postRequest } from \"../../api/index\";\ninterface SignUpFormValues {\n  username: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: FunctionComponent = () => {\n  const [signUpSuccess, setSignUpSuccess] = useState<boolean>(false);\n  const usernameInputRef = useRef<HTMLInputElement | null>(null);\n  const { register, handleSubmit, errors, watch } = useForm({\n    mode: \"onBlur\",\n  });\n\n  useEffect(() => {\n    usernameInputRef.current?.focus();\n  }, []);\n\n  const onSubmit: SubmitHandler<SignUpFormValues> = async (data) => {\n    const { username, email, password } = data;\n    const formData = { username, email, password };\n    const signUpResponse = await postRequest(\n      \"/signup\",\n      JSON.stringify(formData)\n    );\n    if (signUpResponse.data) {\n      setSignUpSuccess(true);\n    }\n  };\n\n  return (\n    <section className=\"flex flex-col flex-1 w-full max-w-2xl p-2 mx-auto my-auto sm:shadow-lg sm:border-t-4 sm:border-blue-900\">\n      {signUpSuccess ? (\n        <Redirect to={process.env.PUBLIC_URL + \"/login\"} />\n      ) : null}\n      <header className=\"flex items-center justify-center py-2 pl-8 pr-12 text-gray-900\">\n        <h1 className=\"text-5xl font-medium text-gray-800 font-hand\">\n          Inscription\n        </h1>\n      </header>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col px-8\">\n        <LabelInput\n          id=\"signup-username\"\n          label=\"Nom d'utilisateur\"\n          type=\"text\"\n          name=\"username\"\n          ref={(e) => {\n            usernameInputRef.current = e;\n            register(e);\n          }}\n          maxLength={20}\n        />\n        <LabelInput\n          id=\"signup-email\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          ref={register({ required: true })}\n        />\n        {errors.email && (\n          <span className=\"text-red-500\">L'email est requis</span>\n        )}\n        <LabelInput\n          id=\"signup-password\"\n          label=\"Mot de passe\"\n          type=\"password\"\n          name=\"password\"\n          ref={register({ required: true, minLength: 8 })}\n        />\n        {errors.password?.type === \"required\" && (\n          <span className=\"text-red-500\">Le mot de passe est requis</span>\n        )}\n        {errors.password?.type === \"minLength\" && (\n          <span className=\"text-red-500\">\n            Le mot de passe doit contenir au moins 8 caractères avec au moins\n            une majuscule, une minuscule, un chiffre et un caractère spécial\n          </span>\n        )}\n        <LabelInput\n          id=\"signup-password-confirm\"\n          name=\"confirmPassword\"\n          label=\"Confirmez le mot de passe\"\n          type=\"password\"\n          ref={register({\n            validate: (value) => value === watch(\"password\"),\n            required: true,\n          })}\n        />\n        {errors.confirmPassword && (\n          <span className=\"text-red-500\">\n            Les mots de passe ne correspondent pas\n          </span>\n        )}\n        <button\n          type=\"submit\"\n          className=\"inline-flex items-center px-4 py-2 mx-auto my-4 text-white bg-blue-900 rounded hover:bg-blue-800\"\n        >\n          S'inscrire\n        </button>\n      </form>\n      <span className=\"mx-auto\">\n        Vous avez déjà un compte ?{\" \"}\n        <Link\n          to={process.env.PUBLIC_URL + \"/login\"}\n          className=\"text-blue-700 hover:underline\"\n        >\n          Connectez-vous\n        </Link>\n      </span>\n    </section>\n  );\n};\n\nexport default SignUp;\n","import React, { FunctionComponent, useEffect, useRef } from \"react\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../AuthContext\";\nimport LabelInput from \"../molecules/LabelInput\";\n\ninterface LoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst LogIn: FunctionComponent = () => {\n  const { login } = useAuth();\n  const emailInputRef = useRef<HTMLInputElement | null>(null);\n  const { register, handleSubmit, errors } = useForm({\n    mode: \"onBlur\",\n  });\n\n  const onSubmit: SubmitHandler<LoginFormValues> = async ({\n    email,\n    password,\n  }) => {\n    await login({ email, password });\n  };\n\n  useEffect(() => {\n    emailInputRef.current?.focus();\n  }, []);\n\n  return (\n    <section className=\"flex flex-col flex-1 max-w-2xl p-2 mx-auto my-auto sm:border-t-4 sm:border-blue-900 sm:shadow-lg\">\n      <header className=\"flex items-center justify-center py-2 pl-8 pr-12 text-gray-900\">\n        <h1 className=\"text-5xl font-medium text-gray-800 font-hand\">\n          Connexion\n        </h1>\n      </header>\n      <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col px-8\">\n        <LabelInput\n          id=\"signup-email\"\n          label=\"Email\"\n          type=\"email\"\n          name=\"email\"\n          ref={(e) => {\n            emailInputRef.current = e;\n            register(e, { required: true });\n          }}\n        />\n        {errors.email && (\n          <span className=\"text-red-500\">L'email est requis</span>\n        )}\n        <LabelInput\n          id=\"signup-password\"\n          label=\"Mot de passe\"\n          type=\"password\"\n          name=\"password\"\n          ref={register({ required: true, minLength: 6 })}\n        />\n        {errors.password?.type === \"required\" && (\n          <span className=\"text-red-500\">Le mot de passe est requis</span>\n        )}\n        {errors.password?.type === \"minLength\" && (\n          <span className=\"text-red-500\">\n            Le mot de passe doit contenir au moins 6 caractères avec une lettre\n            et un chiffre\n          </span>\n        )}\n        <Link\n          to={process.env.PUBLIC_URL + \"/signup\"}\n          className=\"mr-auto text-blue-700 hover:underline\"\n        >\n          Mot de passe oublié ?\n        </Link>\n        <button\n          type=\"submit\"\n          className=\"inline-flex items-center px-4 py-2 mx-auto my-4 text-white bg-blue-900 rounded hover:bg-blue-800\"\n        >\n          Se Connecter\n        </button>\n      </form>\n      <span className=\"mx-auto\">\n        Vous n'avez pas de compte ?{\" \"}\n        <Link\n          to={process.env.PUBLIC_URL + \"/signup\"}\n          className=\"text-blue-700 hover:underline\"\n        >\n          Créez un compte\n        </Link>\n      </span>\n    </section>\n  );\n};\n\nexport default LogIn;\n","import React, { FunctionComponent } from \"react\";\nimport UnauthenticatedHeader from \"./organisms/Header/UnauthenticatedHeader\";\nimport Notes from \"./pages/Notes\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport SignUp from \"./pages/SignUp\";\nimport LogIn from \"./pages/LogIn\";\n\nconst UnauthenticatedApp: FunctionComponent = () => {\n  return (\n    <Router>\n      <UnauthenticatedHeader />\n      <main role=\"main\" className=\"flex flex-grow overflow-y-auto bg-white\">\n        <AppRoutes />\n      </main>\n    </Router>\n  );\n};\n\nconst AppRoutes: FunctionComponent = () => {\n  return (\n    <React.Fragment>\n      <Route\n        exact={true}\n        path={process.env.PUBLIC_URL + \"/\"}\n        component={Notes}\n      />\n      <Route path={process.env.PUBLIC_URL + \"/notes\"} component={Notes} />\n      <Route path={process.env.PUBLIC_URL + \"/signup\"} component={SignUp} />\n      <Route path={process.env.PUBLIC_URL + \"/login\"} component={LogIn} />\n      <Route path=\"*\">\n        <Redirect to={process.env.PUBLIC_URL + \"/\"} />\n      </Route>\n    </React.Fragment>\n  );\n};\n\nexport default UnauthenticatedApp;\n"],"sourceRoot":""}