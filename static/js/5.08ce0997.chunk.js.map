{"version":3,"sources":["components/organisms/Header/AuthenticatedHeader.tsx","components/AuthenticatedApp.tsx"],"names":["AuthenticatedHeader","logout","useAuth","useState","mobileNavOpen","setMobileNavOpen","HeaderMobileDetail","onClose","Button","icon","size","ButtonSize","MEDIUM","onClick","className","aria-label","Title","to","event","AppRoutes","exact","path","component","Notes","SignUp","AuthenticatedApp","role"],"mappings":"kNA8DeA,EAhD6C,WAAO,IACzDC,EAAWC,cAAXD,OADwD,EAEtBE,oBAAkB,GAFI,mBAEzDC,EAFyD,KAE1CC,EAF0C,KAIhE,OACE,oCACGD,GACC,kBAACE,EAAA,EAAD,CAAoBC,QAAS,kBAAYF,GAAiB,MAE5D,kBAAC,IAAD,KACE,kBAACG,EAAA,EAAD,CACEC,KAAK,OACLC,KAAMC,IAAWC,OACjBC,QAAS,kBAAYR,GAAiB,IACtCS,UAAU,gBACVC,aAAW,SAEb,kBAACC,EAAA,EAAD,CAAOH,QAAS,kBAAYR,GAAiB,MAC7C,kBAAC,IAAD,KACE,wBAAIS,UAAU,2DACZ,wBAAIA,UAAU,QACZ,kBAAC,IAAD,CACEG,GAAG,SACHJ,QAAS,kBAAYR,GAAiB,IACtCS,UAAU,4CAHZ,WASJ,kBAACN,EAAA,EAAD,CACEC,KAAK,aACLC,KAAMC,IAAWC,OACjBC,QAAS,SAACK,GACRb,GAAiB,GACjBJ,MAGF,0BAAMa,UAAU,0CAAhB,uBCnCNK,EAA+B,WACnC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAWC,MACxC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWC,MAChC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWE,MACjC,kBAAC,IAAD,CAAOH,KAAK,UACV,kBAAC,IAAD,CAAUJ,GAAG,SAMNQ,UAxB6B,WAC1C,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,0BAAMC,KAAK,OAAOZ,UAAU,2CAC1B,kBAAC,EAAD","file":"static/js/5.08ce0997.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../../AuthContext\";\nimport Button, { ButtonSize } from \"../../atoms/Button\";\nimport HeaderMobileDetail from \"./HeaderMobileDetail\";\nimport Title from \"../../atoms/Title\";\nimport { Header, NavBar } from \"./HeaderElements\";\n\ninterface HeaderProps {\n  categories?: string[];\n  links?: string[];\n  className?: string;\n}\n\nconst AuthenticatedHeader: FunctionComponent<HeaderProps> = () => {\n  const { logout } = useAuth();\n  const [mobileNavOpen, setMobileNavOpen] = useState<boolean>(false);\n\n  return (\n    <>\n      {mobileNavOpen && (\n        <HeaderMobileDetail onClose={(): void => setMobileNavOpen(false)} />\n      )}\n      <Header>\n        <Button\n          icon=\"menu\"\n          size={ButtonSize.MEDIUM}\n          onClick={(): void => setMobileNavOpen(true)}\n          className=\"m-4 sm:hidden\"\n          aria-label=\"Menu\"\n        />\n        <Title onClick={(): void => setMobileNavOpen(false)} />\n        <NavBar>\n          <ul className=\"hidden sm:flex sm:flex-row sm:mr-auto sm:ml-4 sm:w-auto\">\n            <li className=\"py-2\">\n              <Link\n                to=\"/notes\"\n                onClick={(): void => setMobileNavOpen(false)}\n                className=\"ml-2 mr-4 text-teal-200 hover:text-white\"\n              >\n                Notes\n              </Link>\n            </li>\n          </ul>\n          <Button\n            icon=\"userCircle\"\n            size={ButtonSize.MEDIUM}\n            onClick={(event): void => {\n              setMobileNavOpen(false);\n              logout();\n            }}\n          >\n            <span className=\"sr-only sm:not-sr-only sm:ml-2 sm:flex\">\n              DÃ©connexion\n            </span>\n          </Button>\n        </NavBar>\n      </Header>\n    </>\n  );\n};\n\nexport default AuthenticatedHeader;\n","import React, { FunctionComponent } from \"react\";\nimport Notes from \"./pages/Notes\";\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\nimport SignUp from \"./pages/SignUp\";\nimport AuthenticatedHeader from \"./organisms/Header/AuthenticatedHeader\";\n\nconst AuthenticatedApp: FunctionComponent = () => {\n  return (\n    <Router>\n      <AuthenticatedHeader />\n      <main role=\"main\" className=\"flex flex-grow overflow-hidden bg-white\">\n        <AppRoutes />\n      </main>\n    </Router>\n  );\n};\n\nconst AppRoutes: FunctionComponent = () => {\n  return (\n    <Router>\n      <Route exact={true} path=\"/\" component={Notes} />\n      <Route path=\"/notes\" component={Notes} />\n      <Route path=\"/signup\" component={SignUp} />\n      <Route path=\"/login\">\n        <Redirect to=\"/\" />\n      </Route>\n    </Router>\n  );\n};\n\nexport default AuthenticatedApp;\n"],"sourceRoot":""}