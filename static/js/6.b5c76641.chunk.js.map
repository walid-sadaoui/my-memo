{"version":3,"sources":["components/organisms/Header/UnauthenticatedHeader.tsx","components/pages/LogIn.tsx","components/UnauthenticatedApp.tsx"],"names":["LoginLink","otherProps","to","className","Button","icon","size","ButtonSize","MEDIUM","UnauthenticatedHeader","useState","mobileNavOpen","setMobileNavOpen","HeaderMobileDetail","onClose","onClick","aria-label","Title","LogIn","login","useAuth","emailInputRef","useRef","useForm","mode","register","handleSubmit","errors","onSubmit","a","email","password","useEffect","current","focus","LabelInput","id","label","type","name","ref","e","required","minLength","value","AppRoutes","Fragment","exact","path","component","Notes","SignUp","UnauthenticatedApp","role"],"mappings":"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","file":"static/js/6.b5c76641.chunk.js","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button, { ButtonSize } from \"../../atoms/Button\";\r\nimport Title from \"../../atoms/Title\";\r\nimport { Header, NavBar } from \"./HeaderElements\";\r\nimport HeaderMobileDetail from \"./HeaderMobileDetail\";\r\n\r\ninterface HeaderProps {\r\n  logo?: string;\r\n  categories?: string[];\r\n  links?: string[];\r\n  className?: string;\r\n}\r\n\r\nconst LoginLink: React.FC<React.AnchorHTMLAttributes<HTMLAnchorElement>> = ({\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <Link\r\n      to=\"/login\"\r\n      className=\"flex items-end justify-end text-white rounded hover:text-teal-200\"\r\n      {...otherProps}\r\n    >\r\n      <Button icon=\"userCircle\" size={ButtonSize.MEDIUM}>\r\n        <span className=\"sr-only sm:not-sr-only sm:ml-2 sm:flex\">\r\n          Connexion\r\n        </span>\r\n      </Button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst UnauthenticatedHeader: FunctionComponent<HeaderProps> = () => {\r\n  const [mobileNavOpen, setMobileNavOpen] = useState<boolean>(false);\r\n  // const navElements = [{ endpoint: \"/notes\", label: \"Notes\" }];\r\n\r\n  return (\r\n    <>\r\n      {mobileNavOpen && (\r\n        <HeaderMobileDetail onClose={(): void => setMobileNavOpen(false)} />\r\n      )}\r\n      <Header>\r\n        <Button\r\n          icon=\"menu\"\r\n          size={ButtonSize.MEDIUM}\r\n          onClick={(): void => setMobileNavOpen(true)}\r\n          className=\"m-4 sm:hidden\"\r\n          aria-label=\"Menu\"\r\n        />\r\n        <Title onClick={(): void => setMobileNavOpen(false)} />\r\n        <NavBar>\r\n          <ul className=\"hidden sm:flex sm:flex-row sm:mr-auto sm:ml-4 sm:w-auto\">\r\n            <li className=\"py-2\">\r\n              <Link\r\n                to=\"/notes\"\r\n                onClick={(): void => setMobileNavOpen(false)}\r\n                className=\"ml-2 mr-4 text-teal-200 hover:text-white\"\r\n              >\r\n                Notes\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <LoginLink onClick={(): void => setMobileNavOpen(false)} />\r\n        </NavBar>\r\n      </Header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UnauthenticatedHeader;\r\n","import React, { FunctionComponent, useEffect, useRef } from \"react\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../AuthContext\";\r\nimport LabelInput from \"../molecules/LabelInput\";\r\nimport Button from \"../atoms/Button\";\r\n\r\ninterface LoginFormValues {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nconst LogIn: FunctionComponent = () => {\r\n  const { login } = useAuth();\r\n  const emailInputRef = useRef<HTMLInputElement | null>(null);\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<LoginFormValues> = async ({\r\n    email,\r\n    password,\r\n  }) => {\r\n    await login({ email, password });\r\n  };\r\n\r\n  useEffect(() => {\r\n    emailInputRef.current?.focus();\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"flex flex-col flex-1 p-2 my-auto sm:border-t-4 sm:border-blue-900 mx-auto max-w-2xl sm:shadow-lg\">\r\n      <header className=\"flex pl-8 pr-12 py-2 items-center text-gray-900 justify-center\">\r\n        <h1 className=\"text-5xl font-medium font-hand text-gray-800\">\r\n          Connexion\r\n        </h1>\r\n      </header>\r\n      <form onSubmit={handleSubmit(onSubmit)} className=\"flex flex-col px-8\">\r\n        <LabelInput\r\n          id=\"signup-email\"\r\n          label=\"Email\"\r\n          type=\"email\"\r\n          name=\"email\"\r\n          ref={(e) => {\r\n            emailInputRef.current = e;\r\n            register(e, { required: true });\r\n          }}\r\n        />\r\n        {errors.email && (\r\n          <span className=\"text-red-500\">L'email est requis</span>\r\n        )}\r\n        <LabelInput\r\n          id=\"signup-password\"\r\n          label=\"Mot de passe\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          ref={register({ required: true, minLength: 6 })}\r\n        />\r\n        {errors.password?.type === \"required\" && (\r\n          <span className=\"text-red-500\">Le mot de passe est requis</span>\r\n        )}\r\n        {errors.password?.type === \"minLength\" && (\r\n          <span className=\"text-red-500\">\r\n            Le mot de passe doit contenir au moins 6 caractères avec une lettre\r\n            et un chiffre\r\n          </span>\r\n        )}\r\n        <Link to=\"/signup\" className=\"mr-auto text-blue-700 hover:underline\">\r\n          Mot de passe oublié ?\r\n        </Link>\r\n        <Button value=\"Se Connecter\" type=\"submit\" />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"inline-flex items-center px-4 py-2 mx-auto my-4 text-white bg-blue-900 rounded hover:bg-blue-800\"\r\n        >\r\n          Se Connecter\r\n        </button>\r\n      </form>\r\n      <span className=\"mx-auto\">\r\n        Vous n'avez pas de compte ?{\" \"}\r\n        <Link to=\"/signup\" className=\"text-blue-700 hover:underline\">\r\n          Créez un compte\r\n        </Link>\r\n      </span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport UnauthenticatedHeader from \"./organisms/Header/UnauthenticatedHeader\";\r\nimport Notes from \"./pages/Notes\";\r\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\";\r\nimport SignUp from \"./pages/SignUp\";\r\nimport LogIn from \"./pages/LogIn\";\r\n\r\nconst UnauthenticatedApp: FunctionComponent = () => {\r\n  return (\r\n    <Router>\r\n      <UnauthenticatedHeader />\r\n      <main role=\"main\" className=\"flex flex-grow overflow-hidden bg-white\">\r\n        <AppRoutes />\r\n      </main>\r\n    </Router>\r\n  );\r\n};\r\n\r\nconst AppRoutes: FunctionComponent = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Route exact={true} path=\"/\" component={Notes} />\r\n      <Route path=\"/notes\" component={Notes} />\r\n      <Route path=\"/signup\" component={SignUp} />\r\n      <Route path=\"/login\" component={LogIn} />\r\n      <Route path=\"*\">\r\n        <Redirect to=\"/\" />\r\n      </Route>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UnauthenticatedApp;\r\n"],"sourceRoot":""}